{"ast":null,"code":"import _slicedToArray from \"/Users/wileyconte/projects/orderBook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/wileyconte/projects/orderBook/src/components/OrderBookTable.js\";\nimport React, { useState, useEffect } from \"react\";\nimport LoaderIcon from \"react-loader-icon\";\nimport PairSelect from \"./PairSelect\";\nexport default function OrderBookTable(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        poloAsks = _useState2[0],\n        setPoloAsks = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bittrexAsks = _useState4[0],\n        setBittrexAsks = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        poloBids = _useState6[0],\n        setPoloBids = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        bittrexBids = _useState8[0],\n        setBittrexBids = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        loaded = _useState10[0],\n        setLoaded = _useState10[1];\n\n  const decimalAccuracy = 8; // Defines the number of [price, quantity] pairs to be returned by the API\n  // ecause Bittrex returns both bids and asks in a single call, divide by two\n\n  const depth = 6;\n  const exchangeDepth = depth / 2;\n\n  const fetchBooks = async pair => {\n    console.log('HERE'); // Used to ensure all data has been pulled before loaded is set to true\n\n    let count = 0;\n    const proxyURL = \"https://cors-anywhere.herokuapp.com/\",\n          poloURL = \"https://poloniex.com/public?command=returnOrderBook&currencyPair=\" + pair + \"&depth=\" + exchangeDepth,\n          bittrexURL = \"https://api.bittrex.com/api/v1.1/public/getorderbook?market=\" + pair.replace(/_/g, '-') + \"&type=both\";\n    await fetch(proxyURL + poloURL).then(res => {\n      return res.json();\n    }).then(resData => {\n      setPoloAsks(normalizePolo(resData.asks));\n      setPoloBids(normalizePolo(resData.bids));\n      count++;\n    }).catch(err => {\n      console.log(err);\n    });\n    await fetch(proxyURL + bittrexURL).then(res => {\n      return res.json();\n    }).then(resData => {\n      setBittrexBids(normalizeBittrex(resData.result.buy.slice(0, exchangeDepth)));\n      setBittrexAsks(normalizeBittrex(resData.result.sell.slice(0, exchangeDepth)));\n      count++;\n\n      if (count === 2) {\n        setLoaded(true);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // Standardizes the data returned from API calls\n  // For ease of programming this example, I used Floats to represent price and quantity data.\n  // This is NOT the reccommended data structure to deal with currency, and I'm curious to learn\n  // what you're using to handle monetary values.\n\n\n  const normalizePolo = obj => {\n    let newArr = obj.map((val, i) => {\n      return [parseFloat(val[0]), val[1], \"Poloniex\"];\n    });\n    return newArr;\n  };\n\n  const normalizeBittrex = obj => {\n    const arr = obj.map(Object.values);\n    const newArr = arr.map(val => val.reverse());\n    return newArr.map((val, i) => {\n      return [val[0], val[1], \"Bittrex\"];\n    });\n  };\n\n  let totalAsks = [...poloAsks, ...bittrexAsks].sort((a, b) => a - b);\n  let totalBids = [...poloBids, ...bittrexBids].sort((a, b) => b - a); // Cumulative sum function that pushes the combined volumes at each price point into the arrays of asks/bids\n\n  const addCumulativeVolume = arr => {\n    const quantities = arr.map((val, i) => {\n      return [val[1]];\n    });\n    let y = 0;\n    let cumulativeVolumes = quantities.map(d => y += parseFloat(d));\n    const withVolume = arr.map((val, i) => {\n      return [val[0], val[1], val[2], cumulativeVolumes[i].toFixed(decimalAccuracy)];\n    });\n    return withVolume;\n  };\n\n  const lowestAsk = totalAsks.filter((item, _, arr) => item === arr[0]).flat();\n  const highestBid = totalBids.filter((item, _, arr) => item === arr[0]).flat();\n  const spread = (lowestAsk[0] - highestBid[0]).toFixed(decimalAccuracy);\n  const pair = props.pairSelected;\n  useEffect(() => {\n    fetchBooks(pair);\n    const interval = setInterval(() => {\n      fetchBooks(pair);\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const asksTable = addCumulativeVolume(totalAsks).reverse().map(ask => {\n    return React.createElement(\"tr\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, ask[0]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, ask[1]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, ask[2]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, ask[3]));\n  });\n  const bidsTable = addCumulativeVolume(totalBids).map(bid => {\n    return React.createElement(\"tr\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, bid[0]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, bid[1]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, bid[2]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, bid[3]));\n  });\n  return React.createElement(\"section\", {\n    style: {\n      marginTop: \"5%\",\n      marginBottom: \"5%\",\n      marginLeft: \"25%\",\n      marginRight: \"25%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Orderbook\"), React.createElement(PairSelect, {\n    pairSelected: props.pairSelected,\n    setPairSelected: props.setPairSelected,\n    fetchBooks: fetchBooks,\n    loaded: loaded,\n    setLoaded: setLoaded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      marginTop: \"2%\"\n    },\n    className: \"tbl-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    cellPadding: \"0\",\n    cellSpacing: \"0\",\n    border: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Price (\\u20BF)\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Quantity\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Exchange\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Cumulative Volume\"))))), React.createElement(\"div\", {\n    className: \"tbl-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, !loaded && React.createElement(LoaderIcon, {\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), loaded && React.createElement(\"table\", {\n    cellPadding: \"0\",\n    cellSpacing: \"0\",\n    border: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, asksTable, React.createElement(\"tr\", {\n    style: {\n      borderTop: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    style: {\n      color: \"orange\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Asks\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  })), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Spread: \", spread)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  })), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    style: {\n      color: \"#98f542\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Bids\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })), bidsTable))));\n}","map":{"version":3,"sources":["/Users/wileyconte/projects/orderBook/src/components/OrderBookTable.js"],"names":["React","useState","useEffect","LoaderIcon","PairSelect","OrderBookTable","props","poloAsks","setPoloAsks","bittrexAsks","setBittrexAsks","poloBids","setPoloBids","bittrexBids","setBittrexBids","loaded","setLoaded","decimalAccuracy","depth","exchangeDepth","fetchBooks","pair","console","log","count","proxyURL","poloURL","bittrexURL","replace","fetch","then","res","json","resData","normalizePolo","asks","bids","catch","err","normalizeBittrex","result","buy","slice","sell","obj","newArr","map","val","i","parseFloat","arr","Object","values","reverse","totalAsks","sort","a","b","totalBids","addCumulativeVolume","quantities","y","cumulativeVolumes","d","withVolume","toFixed","lowestAsk","filter","item","_","flat","highestBid","spread","pairSelected","interval","setInterval","clearInterval","asksTable","ask","Math","random","bidsTable","bid","marginTop","marginBottom","marginLeft","marginRight","setPairSelected","borderTop","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport LoaderIcon from \"react-loader-icon\"\nimport PairSelect from \"./PairSelect\"\n\nexport default function OrderBookTable(props) {\n\n  const [poloAsks, setPoloAsks] = useState([])\n  const [bittrexAsks, setBittrexAsks] = useState([])\n  const [poloBids, setPoloBids] = useState([])\n  const [bittrexBids, setBittrexBids] = useState([])\n  const [loaded, setLoaded] = useState(false)\n\n  const decimalAccuracy = 8\n\n// Defines the number of [price, quantity] pairs to be returned by the API\n// ecause Bittrex returns both bids and asks in a single call, divide by two\n  const depth = 6\n  const exchangeDepth = depth/2\n\n  const fetchBooks = async pair => {\n\n    console.log('HERE')\n\n    // Used to ensure all data has been pulled before loaded is set to true\n    let count = 0\n\n    const proxyURL   = \"https://cors-anywhere.herokuapp.com/\",\n          poloURL    = \"https://poloniex.com/public?command=returnOrderBook&currencyPair=\" + pair + \"&depth=\" + exchangeDepth,\n          bittrexURL = \"https://api.bittrex.com/api/v1.1/public/getorderbook?market=\" + pair.replace(/_/g, '-') + \"&type=both\"\n\n    await fetch(proxyURL+poloURL)\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        setPoloAsks(normalizePolo(resData.asks))\n        setPoloBids(normalizePolo(resData.bids))\n        count ++\n      })\n      .catch(err => {\n        console.log(err)\n      })\n\n    await fetch(proxyURL+bittrexURL)\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        setBittrexBids(normalizeBittrex(resData.result.buy.slice(0, exchangeDepth)))\n        setBittrexAsks(normalizeBittrex(resData.result.sell.slice(0, exchangeDepth)))\n        count ++\n        if (count === 2) {\n          setLoaded(true)\n        }\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n\n// Standardizes the data returned from API calls\n// For ease of programming this example, I used Floats to represent price and quantity data.\n// This is NOT the reccommended data structure to deal with currency, and I'm curious to learn\n// what you're using to handle monetary values.\n  const normalizePolo = obj => {\n    let newArr = obj.map((val, i) => {\n      return [parseFloat(val[0]), val[1], \"Poloniex\"]\n    })\n    return newArr\n  }\n\n  const normalizeBittrex = obj => {\n    const arr = obj.map(Object.values)\n    const newArr = arr.map(val => val.reverse())\n    return newArr.map((val, i) => {\n      return [val[0], val[1], \"Bittrex\"]\n    })\n  }\n\n  let totalAsks = [...poloAsks, ...bittrexAsks].sort((a,b) => (a-b))\n  let totalBids = [...poloBids, ...bittrexBids].sort((a,b) => (b-a))\n\n// Cumulative sum function that pushes the combined volumes at each price point into the arrays of asks/bids\n  const addCumulativeVolume = arr => {\n    const quantities = arr.map((val, i) => {\n      return [val[1]]\n    })\n    let y = 0\n    let cumulativeVolumes = quantities.map(d => y += parseFloat(d))\n    const withVolume = arr.map((val, i) => {\n      return [val[0], val[1], val[2], cumulativeVolumes[i].toFixed(decimalAccuracy)]\n    })\n    return withVolume\n  }\n\n  const lowestAsk = totalAsks.filter((item, _, arr) => item === arr[0]).flat()\n  const highestBid = totalBids.filter((item, _, arr) => item === arr[0]).flat()\n  const spread = (lowestAsk[0] - highestBid[0]).toFixed(decimalAccuracy)\n\n  const pair = props.pairSelected\n\n  useEffect(() => {\n    fetchBooks(pair)\n    const interval = setInterval(() => {\n      fetchBooks(pair)\n    }, 5000);\n    return () => clearInterval(interval);\n  }, [])\n\n  const asksTable = addCumulativeVolume(totalAsks).reverse().map(ask => {\n      return (\n        <tr key={Math.random()}>\n          <td>{ask[0]}</td>\n          <td>{ask[1]}</td>\n          <td>{ask[2]}</td>\n          <td>{ask[3]}</td>\n        </tr>\n      )\n    })\n\n  const bidsTable = addCumulativeVolume(totalBids).map(bid => {\n    return (\n      <tr key={Math.random()}>\n        <td>{bid[0]}</td>\n        <td>{bid[1]}</td>\n        <td>{bid[2]}</td>\n        <td>{bid[3]}</td>\n      </tr>\n    )\n  })\n\n  return (\n    <section style={{marginTop: \"5%\", marginBottom: \"5%\", marginLeft: \"25%\", marginRight: \"25%\"}}>\n      <h1>Orderbook</h1>\n      <PairSelect\n        pairSelected={props.pairSelected}\n        setPairSelected={props.setPairSelected}\n        fetchBooks={fetchBooks}\n        loaded={loaded}\n        setLoaded={setLoaded}/>\n      <div style={{marginTop: \"2%\"}} className=\"tbl-header\">\n      <table cellPadding=\"0\" cellSpacing=\"0\" border=\"0\">\n        <thead>\n          <tr>\n            <th>Price (₿)</th>\n            <th>Quantity</th>\n            <th>Exchange</th>\n            <th>Cumulative Volume</th>\n          </tr>\n        </thead>\n      </table>\n      </div>\n      <div className=\"tbl-content\">\n        {!loaded && <LoaderIcon color={\"white\"} />}\n        {loaded &&\n        <table cellPadding=\"0\" cellSpacing=\"0\" border=\"0\">\n        <tbody>\n          {asksTable}\n          <tr style={{borderTop: \"none\"}}>\n            <td style={{color: \"orange\"}}>Asks</td>\n            <td />\n            <td />\n            <td />\n          </tr>\n          <tr>\n            <td><strong>Spread: {spread}</strong></td>\n            <td />\n            <td />\n            <td />\n          </tr>\n          <tr>\n            <td style={{color: \"#98f542\"}}>Bids</td>\n            <td />\n            <td />\n            <td />\n          </tr>\n          {bidsTable}\n        </tbody>\n      </table>}\n    </div>\n  </section>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}